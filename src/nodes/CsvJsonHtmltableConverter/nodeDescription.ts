import type { INodeTypeDescription } from 'n8n-workflow';
import { FORMAT_OPTIONS, OPERATION_OPTIONS } from './utils/constants';

export const nodeDescription: INodeTypeDescription = {
  displayName: 'CSV JSON HTMLTable Converter',
  name: 'csvJsonHtmltableConverter',
  icon: 'file:csvJsonHtmltableConverter.svg',
  group: ['transform'],
  version: 1.1,
  subtitle: '={{ $parameter["operation"] === "convert" ? $parameter["sourceFormat"] + " to " + $parameter["targetFormat"] : "Replace HTML Table" }}',
  description: 'Converts between CSV, JSON, HTML tables, and n8n Objects, or replaces HTML tables.',
  defaults: {
    name: 'CSV JSON HTMLTable Converter',
  },
  inputs: ['main'],
  outputs: ['main'],
  properties: [
    {
      displayName: 'Operation',
      name: 'operation',
      type: 'options',
      options: OPERATION_OPTIONS,
      default: 'convert',
      description: 'Choose Convert for data transformation or Replace for modifying HTML',
      required: true,
    },
    {
      displayName: 'Source Format',
      name: 'sourceFormat',
      type: 'options',
      options: FORMAT_OPTIONS,
      default: 'json',
      description: 'The format of the input data',
      required: true,
      displayOptions: { show: { operation: ['convert'] } },
    },
    {
      displayName: 'Target Format',
      name: 'targetFormat',
      type: 'options',
      options: FORMAT_OPTIONS,
      default: 'csv',
      description: 'The format to convert the data to',
      required: true,
      displayOptions: { show: { operation: ['convert'] } },
    },
    {
      displayName: 'Input Data',
      name: 'inputData',
      type: 'string',
      default: '',
      typeOptions: { rows: 10 },
      description: 'The data to be converted (e.g., JSON string, CSV text, HTML string, or n8n object/expression)',
      required: true,
      displayOptions: { show: { operation: ['convert'] } },
    },
    {
      displayName: 'CSV Delimiter (Input)',
      name: 'csvDelimiterInput',
      type: 'string',
      default: ',',
      description: 'Delimiter for parsing input CSV data',
      displayOptions: { show: { operation: ['convert'], sourceFormat: ['csv'] } },
    },
    {
      displayName: 'CSV Delimiter (Output)',
      name: 'csvDelimiterOutput',
      type: 'string',
      default: ',',
      description: 'Delimiter for generating output CSV data',
      displayOptions: { show: { operation: ['convert'], targetFormat: ['csv'] } },
    },
    {
      displayName: 'Table Selection Mode',
      name: 'selectorMode',
      type: 'options',
      options: [
        { name: 'Simple', value: 'simple' }, { name: 'Advanced', value: 'advanced' }
      ],
      default: 'simple',
      description: 'How to select the table(s) to convert from HTML',
      displayOptions: { show: { operation: ['convert'], sourceFormat: ['html'] } },
    },
    {
      displayName: 'Table Preset',
      name: 'tablePreset',
      type: 'options',
      options: [
        { name: 'First Table Only', value: 'first-table' },
        { name: 'Last Table', value: 'last-table' },
        { name: 'Table Under Heading', value: 'table-under-heading' },
        { name: 'Custom Selector', value: 'custom' },
      ],
      default: 'first-table',
      description: 'Select HTML table(s) based on preset criteria',
      displayOptions: { show: { operation: ['convert'], sourceFormat: ['html'], selectorMode: ['simple'] } },
    },
    {
      displayName: 'Heading Level',
      name: 'headingLevel',
      type: 'options',
      options: [
        { name: 'H1', value: 'h1' }, { name: 'H2', value: 'h2' }, { name: 'H3', value: 'h3' },
        { name: 'H4', value: 'h4' }, { name: 'H5', value: 'h5' }, { name: 'H6', value: 'h6' }
      ],
      default: 'h2',
      description: 'Heading level (h1-h6) preceding the table',
      displayOptions: { show: { operation: ['convert'], sourceFormat: ['html'], selectorMode: ['simple'], tablePreset: ['table-under-heading'] } },
    },
    {
      displayName: 'Heading Text',
      name: 'headingText',
      type: 'string',
      default: '',
      description: 'Text the heading must contain (case-insensitive, partial match)',
      displayOptions: { show: { operation: ['convert'], sourceFormat: ['html'], selectorMode: ['simple'], tablePreset: ['table-under-heading'] } },
    },
    {
      displayName: 'Table Index',
      name: 'tableIndex',
      type: 'number',
      default: 1,
      description: 'Index of the table after the heading (1-based)',
      displayOptions: { show: { operation: ['convert'], sourceFormat: ['html'], selectorMode: ['simple'], tablePreset: ['table-under-heading'] } },
    },
    {
      displayName: 'Custom Table Selector',
      name: 'tableSelector',
      type: 'string',
      default: 'table',
      description: 'CSS selector for the table (Simple mode - Custom preset)',
      displayOptions: { show: { operation: ['convert'], sourceFormat: ['html'], selectorMode: ['simple'], tablePreset: ['custom'] } },
    },
    {
      displayName: 'Containing Element Selector',
      name: 'elementSelector',
      type: 'string',
      default: 'html',
      description: 'CSS selector for the element containing the table(s) (Advanced mode)',
      displayOptions: { show: { operation: ['convert'], sourceFormat: ['html'], selectorMode: ['advanced'] } },
    },
    {
      displayName: 'Table Selector (Advanced)',
      name: 'tableSelector',
      type: 'string',
      default: 'table',
      description: 'CSS selector for the table(s) within the element (Advanced mode)',
      displayOptions: { show: { operation: ['convert'], sourceFormat: ['html'], selectorMode: ['advanced'] } },
    },
    {
      displayName: 'Include Table Headers',
      name: 'includeTableHeaders',
      type: 'boolean',
      default: true,
      description: 'Whether to include table headers in the output (relevant for HTML/CSV targets)',
      displayOptions: {
        show: {
          operation: ['convert'],
        },
        hide: {
          targetFormat: ['n8nObject', 'json'],
        },
      },
    },
    {
      displayName: 'Pretty Print Output',
      name: 'prettyPrint',
      type: 'boolean',
      default: false,
      description: 'Format the output with indentation and spacing (relevant for JSON/HTML/CSV targets)',
      displayOptions: {
        show: {
          operation: ['convert'],
          targetFormat: ['json', 'html', 'csv'],
        }
      },
    },
    {
      displayName: 'Output Field',
      name: 'outputField',
      type: 'string',
      default: 'convertedData',
      description: 'The name of the output field to store the converted data',
      displayOptions: {
        show: { operation: ['convert'] },
        hide: { targetFormat: ['n8nObject'] }
      },
    },
    {
      displayName: 'Source HTML',
      name: 'sourceHtml',
      type: 'string',
      default: '',
      typeOptions: { rows: 10 },
      description: 'The HTML document containing the table(s) to replace',
      required: true,
      displayOptions: { show: { operation: ['replace'] } },
    },
    {
      displayName: 'Replacement Content',
      name: 'replacementContent',
      type: 'string',
      default: '',
      typeOptions: { rows: 10, hint: 'Provide valid HTML content here' },
      description: 'The HTML content that will replace the selected table(s).',
      required: true,
      displayOptions: { show: { operation: ['replace'] } },
    },
    {
      displayName: 'Table Selection Mode',
      name: 'selectorMode',
      type: 'options',
      options: [
        { name: 'Simple', value: 'simple' }, { name: 'Advanced', value: 'advanced' }
      ],
      default: 'simple',
      description: 'How to select the table(s) to replace',
      displayOptions: { show: { operation: ['replace'] } },
    },
    {
      displayName: 'Table Preset',
      name: 'tablePreset',
      type: 'options',
      options: [
        { name: 'All Tables', value: 'all-tables', description: 'Replace all matched tables' },
        { name: 'First Table Only', value: 'first-table', description: 'Replace only the first matched table' },
        { name: 'Last Table', value: 'last-table', description: 'Replace only the last matched table' },
        { name: 'Table Under Heading', value: 'table-under-heading', description: 'Replace a specific table following a heading' },
        { name: 'Custom Selector', value: 'custom', description: 'Replace table(s) matching a custom CSS selector' },
      ],
      default: 'all-tables',
      description: 'Select table(s) to replace based on preset criteria',
      displayOptions: { show: { operation: ['replace'], selectorMode: ['simple'] } },
    },
    {
      displayName: 'Heading Level',
      name: 'headingLevel',
      type: 'options',
      options: [
        { name: 'H1', value: 'h1' }, { name: 'H2', value: 'h2' }, { name: 'H3', value: 'h3' },
        { name: 'H4', value: 'h4' }, { name: 'H5', value: 'h5' }, { name: 'H6', value: 'h6' }
      ],
      default: 'h2',
      description: 'Heading level (h1-h6) preceding the table',
      displayOptions: { show: { operation: ['replace'], selectorMode: ['simple'], tablePreset: ['table-under-heading'] } },
    },
    {
      displayName: 'Heading Text',
      name: 'headingText',
      type: 'string',
      default: '',
      description: 'Text the heading must contain (case-insensitive, partial match)',
      displayOptions: { show: { operation: ['replace'], selectorMode: ['simple'], tablePreset: ['table-under-heading'] } },
    },
    {
      displayName: 'Table Index',
      name: 'tableIndex',
      type: 'number',
      default: 1,
      description: 'Index of the table after the heading (1-based)',
      displayOptions: { show: { operation: ['replace'], selectorMode: ['simple'], tablePreset: ['table-under-heading'] } },
    },
    {
      displayName: 'Custom Table Selector',
      name: 'tableSelector',
      type: 'string',
      default: 'table',
      description: 'CSS selector for the table (Simple mode - Custom preset)',
      displayOptions: { show: { operation: ['replace'], selectorMode: ['simple'], tablePreset: ['custom'] } },
    },
    {
      displayName: 'Containing Element Selector',
      name: 'elementSelector',
      type: 'string',
      default: 'html',
      description: 'CSS selector for the element containing the table(s) (Advanced mode)',
      displayOptions: { show: { operation: ['replace'], selectorMode: ['advanced'] } },
    },
    {
      displayName: 'Table Selector (Advanced)',
      name: 'tableSelector',
      type: 'string',
      default: 'table',
      description: 'CSS selector for the table(s) within the element (Advanced mode)',
      displayOptions: { show: { operation: ['replace'], selectorMode: ['advanced'] } },
    },
    {
      displayName: 'Pretty Print Output',
      name: 'prettyPrint',
      type: 'boolean',
      default: false,
      description: 'Format the final output HTML with indentation and spacing',
      displayOptions: { show: { operation: ['replace'] } },
    },
    {
      displayName: 'Output Field',
      name: 'outputField',
      type: 'string',
      default: 'convertedData',
      description: 'The name of the output field to store the final HTML',
      displayOptions: { show: { operation: ['replace'] } },
    },
  ],
};
